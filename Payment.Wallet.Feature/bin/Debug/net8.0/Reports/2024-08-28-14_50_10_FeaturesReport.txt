Summary:
	Test execution start time       : 2024-08-28 14:50:10 UTC
	Test execution end time         : 2024-08-28 14:50:10 UTC
	Test execution time             : 239ms
	Test execution time (aggregated): 478ms
	Number of features              : 1
	Number of scenarios             : 2
	Passed scenarios                : 0
	Bypassed scenarios              : 0
	Failed scenarios                : 2
	Ignored scenarios               : 0
	Number of steps                 : 20
	Passed steps                    : 12
	Bypassed steps                  : 0
	Failed steps                    : 2
	Ignored steps                   : 0
	Not Run steps                   : 6

Feature: PaymentWalletsFeature [FEAT 1 - Payment Wallet]
	In order to manage the Payment Wallet
	    As an api service
	    I want to be able to deposit, withdraw and get current balance

	Scenario: Scenario 1 Perform payment wallet actions happy path [SCENARIO 1 - Perform Payment Wallet Actions Happy Path] - Failed (239ms)
		Step 1: SETUP A clean up on the payment wallet is requested before test commence - Passed (118ms)
			Step 1.1: WHEN A get wallet balance action is requested - Passed (76ms)
			Step 1.2: AND A withdraw amount all amount action is requested - Passed (30ms)
		Step 2: GIVEN A get wallet balance action is requested - Passed (1ms)
		Step 3: AND The wallet balance should be set to amount "0" - Passed (9ms)
		Step 4: WHEN A deposit amount action is requested [paymentDepositInput: "Payment.Wallet.Contracts.PaymentDepositInput"] - Passed (5ms)
		Step 5: THEN A get wallet balance action is requested - Passed (1ms)
		Step 6: AND The wallet balance should be set to amount "300" - Failed (38ms)
		Step 7: AND A withdraw amount action is requested [paymentWithdrawInput: "<?>"] - NotRun
		Step 8: AND A get wallet balance action is requested - NotRun
		Step 9: FINALLY The wallet balance should be set to amount "<?>" - NotRun
		Details:
			Step 6: Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException : Expected balance.Amount to be "300", but "600" differs near "600" (index 0).
				at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in /_/Src/FluentAssertions/Execution/LateBoundTestFramework.cs:line 18
				at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in /_/Src/FluentAssertions/Execution/TestFrameworkProvider.cs:line 39
				at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in /_/Src/FluentAssertions/Execution/DefaultAssertionStrategy.cs:line 18
				at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc) in /_/Src/FluentAssertions/Execution/AssertionScope.cs:line 291
				at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc) in /_/Src/FluentAssertions/Execution/AssertionScope.cs:line 259
				at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args) in /_/Src/FluentAssertions/Execution/AssertionScope.cs:line 313
				at FluentAssertions.Primitives.StringEqualityStrategy.ValidateAgainstMismatch(IAssertionScope assertion, String subject, String expected) in /_/Src/FluentAssertions/Primitives/StringEqualityStrategy.cs:line 57
				at FluentAssertions.Primitives.StringValidator.Validate(String subject, String expected) in /_/Src/FluentAssertions/Primitives/StringValidator.cs:line 34

	Scenario: Scenario 1 Perform payment wallet actions negative path [SCENARIO 2 - Perform Payment Wallet Actions Negative Path] - Failed (239ms)
		Step 1: SETUP A clean up on the payment wallet is requested before test commence - Passed (118ms)
			Step 1.1: WHEN A get wallet balance action is requested - Passed (76ms)
			Step 1.2: AND A withdraw amount all amount action is requested - Passed (30ms)
		Step 2: GIVEN A withdraw amount action that exceeds the wallet balance is requested and return message should be "Invalid withdrawal amount. There are insufficient funds." [paymentWithdrawInput: "Payment.Wallet.Contracts.PaymentWithdrawInput"] - Passed (11ms)
		Step 3: WHEN A deposit amount action is requested [paymentDepositInput: "Payment.Wallet.Contracts.PaymentDepositInput"] - Passed (5ms)
		Step 4: THEN A withdraw amount action that exceeds the wallet balance is requested and return message should be "Invalid withdrawal amount. There are insufficient funds." [paymentWithdrawInput: "Payment.Wallet.Contracts.PaymentWithdrawInput"] - Failed (39ms)
		Step 5: AND A get wallet balance action is requested - NotRun
		Step 6: AND The wallet balance should be set to amount "<?>" - NotRun
		Step 7: AND A deposit amount action with an invalid is requested and return message should be "One or more validation errors occurred." [paymentDepositInput: "<?>"] - NotRun
		Details:
			Step 4: Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException : Expected result.Title to be "Invalid withdrawal amount. There are insufficient funds.", but found <null>.
				at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in /_/Src/FluentAssertions/Execution/LateBoundTestFramework.cs:line 18
				at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in /_/Src/FluentAssertions/Execution/TestFrameworkProvider.cs:line 39
				at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in /_/Src/FluentAssertions/Execution/DefaultAssertionStrategy.cs:line 18
				at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc) in /_/Src/FluentAssertions/Execution/AssertionScope.cs:line 291
				at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc) in /_/Src/FluentAssertions/Execution/AssertionScope.cs:line 259
				at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args) in /_/Src/FluentAssertions/Execution/AssertionScope.cs:line 313
				at FluentAssertions.Primitives.StringValidator.ValidateAgainstNulls(String subject, String expected) in /_/Src/FluentAssertions/Primitives/StringValidator.cs:line 44
				at FluentAssertions.Primitives.StringValidator.Validate(String subject, String expected) in /_/Src/FluentAssertions/Primitives/StringValidator.cs:line 24
